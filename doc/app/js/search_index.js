var search_data = {"index":{"searchIndex":["accessinfo","account","accounts","confirmationscontroller","passwordscontroller","registrationscontroller","sessionscontroller","unlockscontroller","accountscontroller","accountshelper","actor","actorscontroller","actorshelper","app","applicationcontroller","applicationhelper","appscontroller","appshelper","authenticateaccount","authenticateapi","authenticateorigin","basecontroller","conversion","conversionscontroller","conversionshelper","err","errscontroller","errshelper","event","events","eventscontroller","eventshelper","generatetoken","gettype","identifier","identifierscontroller","identifiershelper","object","property","rule","rulescontroller","ruleshelper","socialcontroller","testworker","worker","utility","formathash","add!()","add!()","add!()","add!()","add!()","add!()","add_user_to_mailchimp()","after()","after_confirmation_path_for()","after_resending_confirmation_instructions_path_for()","after_sign_in_path_for()","alias()","alias()","attempt_set_password()","authenticate_api!()","authenticate_origin!()","authenticate_request()","before()","before()","before()","build_session()","check_query()","create()","create()","create()","create()","create()","create()","create()","create()","credentials()","delete()","delete()","delete()","delete_session()","execute()","faraday_example()","format_actor()","format_app()","format_conversion()","format_err()","format_event()","format_identifier()","format_rule()","get_type()","identify()","identify()","if_boolean()","index()","index()","invite_account_request()","list_apps()","method_missing()","only_if_unconfirmed()","perform()","read()","read()","read()","read()","read()","read()","read()","read()","refresh_token()","remap_to()","remove_user_from_mailchimp()","serialize_to()","set()","set()","show()","social_crm()","str_equality()","str_regex()","to_something()","type_map()","unique_token()","update()","update()","update()","update()","update()","update_schema()","readme_for_app"],"longSearchIndex":["accessinfo","account","accounts","accounts::confirmationscontroller","accounts::passwordscontroller","accounts::registrationscontroller","accounts::sessionscontroller","accounts::unlockscontroller","accountscontroller","accountshelper","actor","actorscontroller","actorshelper","app","applicationcontroller","applicationhelper","appscontroller","appshelper","authenticateaccount","authenticateapi","authenticateorigin","basecontroller","conversion","conversionscontroller","conversionshelper","err","errscontroller","errshelper","event","events","eventscontroller","eventshelper","generatetoken","gettype","identifier","identifierscontroller","identifiershelper","object","property","rule","rulescontroller","ruleshelper","socialcontroller","testworker","testworker::worker","utility","utility::formathash","accessinfo::add!()","app::add!()","conversion::add!()","err::add!()","event::add!()","rule::add!()","account#add_user_to_mailchimp()","authenticateapi#after()","accounts::confirmationscontroller#after_confirmation_path_for()","accounts::confirmationscontroller#after_resending_confirmation_instructions_path_for()","applicationcontroller#after_sign_in_path_for()","actor::alias()","actorscontroller#alias()","account#attempt_set_password()","applicationcontroller#authenticate_api!()","applicationcontroller#authenticate_origin!()","applicationcontroller::authenticate_request()","authenticateaccount#before()","authenticateapi#before()","authenticateorigin#before()","applicationcontroller#build_session()","events::check_query()","accounts::confirmationscontroller#create()","accounts::registrationscontroller#create()","actorscontroller#create()","appscontroller#create()","conversionscontroller#create()","errscontroller#create()","eventscontroller#create()","rulescontroller#create()","accountscontroller#credentials()","appscontroller#delete()","rule::delete()","rulescontroller#delete()","applicationcontroller#delete_session()","object#execute()","object#faraday_example()","actor#format_actor()","app#format_app()","conversion#format_conversion()","err#format_err()","event#format_event()","identifier#format_identifier()","rule#format_rule()","gettype::get_type()","actor::identify()","actorscontroller#identify()","gettype::if_boolean()","basecontroller#index()","socialcontroller#index()","accounts::registrationscontroller#invite_account_request()","accountscontroller#list_apps()","utility::method_missing()","account#only_if_unconfirmed()","testworker::worker#perform()","account::read()","accountscontroller#read()","actor::read()","actorscontroller#read()","app::read()","appscontroller#read()","rule::read()","rulescontroller#read()","accessinfo#refresh_token()","actor#remap_to()","account#remove_user_from_mailchimp()","utility::formathash::serialize_to()","actor::set()","actorscontroller#set()","accounts::confirmationscontroller#show()","socialcontroller#social_crm()","object#str_equality()","object#str_regex()","gettype::to_something()","gettype::type_map()","generatetoken::unique_token()","accounts::confirmationscontroller#update()","app::update()","appscontroller#update()","rule::update()","rulescontroller#update()","app#update_schema()",""],"info":[["AccessInfo","","AccessInfo.html","",""],["Account","","Account.html","",""],["Accounts","","Accounts.html","",""],["Accounts::ConfirmationsController","","Accounts/ConfirmationsController.html","",""],["Accounts::PasswordsController","","Accounts/PasswordsController.html","",""],["Accounts::RegistrationsController","","Accounts/RegistrationsController.html","",""],["Accounts::SessionsController","","Accounts/SessionsController.html","",""],["Accounts::UnlocksController","","Accounts/UnlocksController.html","",""],["AccountsController","","AccountsController.html","",""],["AccountsHelper","","AccountsHelper.html","",""],["Actor","","Actor.html","",""],["ActorsController","","ActorsController.html","",""],["ActorsHelper","","ActorsHelper.html","",""],["App","","App.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["AppsController","","AppsController.html","",""],["AppsHelper","","AppsHelper.html","",""],["AuthenticateAccount","","AuthenticateAccount.html","",""],["AuthenticateApi","","AuthenticateApi.html","",""],["AuthenticateOrigin","","AuthenticateOrigin.html","",""],["BaseController","","BaseController.html","",""],["Conversion","","Conversion.html","",""],["ConversionsController","","ConversionsController.html","",""],["ConversionsHelper","","ConversionsHelper.html","",""],["Err","","Err.html","",""],["ErrsController","","ErrsController.html","",""],["ErrsHelper","","ErrsHelper.html","",""],["Event","","Event.html","",""],["Events","","Events.html","",""],["EventsController","","EventsController.html","",""],["EventsHelper","","EventsHelper.html","",""],["GenerateToken","","GenerateToken.html","",""],["GetType","","GetType.html","",""],["Identifier","","Identifier.html","",""],["IdentifiersController","","IdentifiersController.html","",""],["IdentifiersHelper","","IdentifiersHelper.html","",""],["Object","","Object.html","",""],["Property","","Property.html","",""],["Rule","","Rule.html","",""],["RulesController","","RulesController.html","",""],["RulesHelper","","RulesHelper.html","",""],["SocialController","","SocialController.html","",""],["TestWorker","","TestWorker.html","",""],["TestWorker::Worker","","TestWorker/Worker.html","",""],["Utility","","Utility.html","",""],["Utility::FormatHash","","Utility/FormatHash.html","",""],["add!","AccessInfo","AccessInfo.html#method-c-add-21","(params)","<p>OUTPUT =&gt; {:return =&gt; object, :error =&gt; e}\n"],["add!","App","App.html#method-c-add-21","(params)","<p>OUTPUT =&gt; {\n\n<pre class=\"ruby\">   :<span class=\"ruby-keyword\">return</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">obj</span>, :<span class=\"ruby-identifier\">error</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-keyword\">nil</span>\n}\n</pre>\n"],["add!","Conversion","Conversion.html#method-c-add-21","(params)","<p>OUTPUT =&gt; {:return =&gt; true, :error =&gt; nil}\n"],["add!","Err","Err.html#method-c-add-21","(params)","<p>OUTPUT =&gt; {:return =&gt; true, :error =&gt; nil}\n"],["add!","Event","Event.html#method-c-add-21","(params)","<p>OUTPUT =&gt; {:return =&gt; true, :error =&gt; nil}\n"],["add!","Rule","Rule.html#method-c-add-21","(params)","<p>OUTPUT =&gt; {\n\n<pre>  rule_id: &quot;1211221&quot;\n}</pre>\n"],["add_user_to_mailchimp","Account","Account.html#method-i-add_user_to_mailchimp","()","<p>Mailchimp integration, add to subscribed list ASA email id is added\n"],["after","AuthenticateApi","AuthenticateApi.html#method-i-after","( controller )",""],["after_confirmation_path_for","Accounts::ConfirmationsController","Accounts/ConfirmationsController.html#method-i-after_confirmation_path_for","(resource_name, resource)","<p>The path used after confirmation.\n"],["after_resending_confirmation_instructions_path_for","Accounts::ConfirmationsController","Accounts/ConfirmationsController.html#method-i-after_resending_confirmation_instructions_path_for","(resource_name)","<p>The path used after resending confirmation instructions.\n"],["after_sign_in_path_for","ApplicationController","ApplicationController.html#method-i-after_sign_in_path_for","(resource_or_scope)","<p>respond_to :json, :html\n"],["alias","Actor","Actor.html#method-c-alias","(params)","<p>OUTPUT =&gt; {:return =&gt; true, :error =&gt; nil}\n"],["alias","ActorsController","ActorsController.html#method-i-alias","()","<p>OUTPUT =&gt; {:status =&gt; true}\n"],["attempt_set_password","Account","Account.html#method-i-attempt_set_password","(params)","<p>new function to set the password\n"],["authenticate_api!","ApplicationController","ApplicationController.html#method-i-authenticate_api-21","()",""],["authenticate_origin!","ApplicationController","ApplicationController.html#method-i-authenticate_origin-21","()",""],["authenticate_request","ApplicationController","ApplicationController.html#method-c-authenticate_request","(params, options = [])",""],["before","AuthenticateAccount","AuthenticateAccount.html#method-i-before","( controller )","<p>this is called from the controller automatically when we use before_filter\n"],["before","AuthenticateApi","AuthenticateApi.html#method-i-before","( controller )","<p>this is called from the controller automatically when we use before_filter\n"],["before","AuthenticateOrigin","AuthenticateOrigin.html#method-i-before","( controller )","<p>this is called from the controller automatically when we use before_filter\n"],["build_session","ApplicationController","ApplicationController.html#method-i-build_session","(access)",""],["check_query","Events","Events.html#method-c-check_query","()",""],["create","Accounts::ConfirmationsController","Accounts/ConfirmationsController.html#method-i-create","()","<p>POST /resource/confirmation\n"],["create","Accounts::RegistrationsController","Accounts/RegistrationsController.html#method-i-create","()","<p>POST /resource\n"],["create","ActorsController","ActorsController.html#method-i-create","()","<p>OUTPUT =&gt; {\n\n<pre class=\"ruby\">   <span class=\"ruby-string\">&quot;id&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;50742b0063fe85d42a000005&quot;</span>,\n   <span class=\"ruby-string\">&quot;account_id&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;50742aff63fe85d42a000001&quot;</span>, \n   <span class=\"ruby-string\">&quot;app_id&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;50742b0063fe85d42a000003&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n"],["create","AppsController","AppsController.html#method-i-create","()","<p>OUTPUT =&gt; {\n\n<pre class=\"ruby\">                             <span class=\"ruby-string\">&quot;id&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;5074143063fe853420000005&quot;</span>, \n\n                      <span class=\"ruby-operator\">...</span>\n</pre>\n"],["create","ConversionsController","ConversionsController.html#method-i-create","()","<p>OUTPUT =&gt; {\n\n<pre class=\"ruby\">    <span class=\"ruby-string\">&quot;id&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;50838a5e63fe85d820000005&quot;</span>, \n\n    <span class=\"ruby-string\">&quot;account_id&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;50838a5e63fe85d820000004&quot;</span>,  <span class=\"ruby-operator\">...</span>\n</pre>\n"],["create","ErrsController","ErrsController.html#method-i-create","()","<p>OUTPUT =&gt; {\n\n<pre class=\"ruby\">    <span class=\"ruby-string\">&quot;id&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;50838a5e63fe85d820000005&quot;</span>, \n\n    <span class=\"ruby-string\">&quot;account_id&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;50838a5e63fe85d820000004&quot;</span>,  <span class=\"ruby-operator\">...</span>\n</pre>\n"],["create","EventsController","EventsController.html#method-i-create","()","<p>OUTPUT =&gt; {\n\n<pre class=\"ruby\">    <span class=\"ruby-string\">&quot;id&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;50838a5e63fe85d820000005&quot;</span>, \n\n    <span class=\"ruby-string\">&quot;account_id&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;50838a5e63fe85d820000004&quot;</span>,  <span class=\"ruby-operator\">...</span>\n</pre>\n"],["create","RulesController","RulesController.html#method-i-create","()","<p>OUTPUT =&gt; {\n\n<pre>  rule_id: &quot;1211221&quot;\n}</pre>\n"],["credentials","AccountsController","AccountsController.html#method-i-credentials","()","<p>API to send the credentials to check if the user is logged in\n"],["delete","AppsController","AppsController.html#method-i-delete","()","<p>OUTPUT =&gt; {status; true or false}\n"],["delete","Rule","Rule.html#method-c-delete","(params)","<p>OUTPUT =&gt; {\n\n<pre class=\"ruby\">  :<span class=\"ruby-keyword\">return</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-keyword\">true</span> <span class=\"ruby-keyword\">or</span> <span class=\"ruby-keyword\">false</span>, :<span class=\"ruby-identifier\">error</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-keyword\">nil</span>\n}\n</pre>\n"],["delete","RulesController","RulesController.html#method-i-delete","()","<p>OUTPUT =&gt; {\n\n<pre class=\"ruby\">  <span class=\"ruby-operator\">:</span> <span class=\"ruby-identifier\">status</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-keyword\">true</span> <span class=\"ruby-keyword\">or</span> <span class=\"ruby-keyword\">false</span>\n}\n</pre>\n"],["delete_session","ApplicationController","ApplicationController.html#method-i-delete_session","()",""],["execute","Object","Object.html#method-i-execute","(params)",""],["faraday_example","Object","Object.html#method-i-faraday_example","(message)",""],["format_actor","Actor","Actor.html#method-i-format_actor","()",""],["format_app","App","App.html#method-i-format_app","()",""],["format_conversion","Conversion","Conversion.html#method-i-format_conversion","()",""],["format_err","Err","Err.html#method-i-format_err","()",""],["format_event","Event","Event.html#method-i-format_event","()",""],["format_identifier","Identifier","Identifier.html#method-i-format_identifier","()",""],["format_rule","Rule","Rule.html#method-i-format_rule","()",""],["get_type","GetType","GetType.html#method-c-get_type","(val)",""],["identify","Actor","Actor.html#method-c-identify","(params)","<p>OUTPUT =&gt; {:return =&gt; actor_id, :error =&gt; nil}\n"],["identify","ActorsController","ActorsController.html#method-i-identify","()","<p>OUTPUT =&gt; {:actor_id =&gt; 1232323}\n"],["if_boolean","GetType","GetType.html#method-c-if_boolean","(str)",""],["index","BaseController","BaseController.html#method-i-index","()",""],["index","SocialController","SocialController.html#method-i-index","()",""],["invite_account_request","Accounts::RegistrationsController","Accounts/RegistrationsController.html#method-i-invite_account_request","()","<p>POST /resource\n"],["list_apps","AccountsController","AccountsController.html#method-i-list_apps","()","<p>OUTPUT =&gt;{\n\n<pre>  apps: [\n          { \n            id: &quot;343433433&quot;, account_id: &quot;324324&quot;, \n            ...</pre>\n"],["method_missing","Utility","Utility.html#method-c-method_missing","(name, *args, &block)",""],["only_if_unconfirmed","Account","Account.html#method-i-only_if_unconfirmed","()","<p>new function to provide access to protected method pending_any_confirmation\n"],["perform","TestWorker::Worker","TestWorker/Worker.html#method-i-perform","(name, count)",""],["read","Account","Account.html#method-c-read","(params)","<p>OUTPUT =&gt;{\n\n<pre>    account: {id: &quot;445654654645&quot;, name: &quot;Sudhanshu &amp; Sons Chaddhi Wale&quot;, description: {subscription: ...</pre>\n"],["read","AccountsController","AccountsController.html#method-i-read","()","<p>OUTPUT =&gt;{\n\n<pre>    account: {id: &quot;445654654645&quot;, name: &quot;Sudhanshu &amp; Sons Chaddhi Wale&quot;, description: {subscription: ...</pre>\n"],["read","Actor","Actor.html#method-c-read","(params)","<p>OUTPUT =&gt; {\n\n<pre>  account: {id: &quot;232342343&quot;}\n  app: {id: &quot;234324&quot;}\n\n  actor: {id: &quot;3433434&quot;, description: ...</pre>\n"],["read","ActorsController","ActorsController.html#method-i-read","()","<p>OUTPUT =&gt; {\n\n<pre>  account: {id: &quot;232342343&quot;}\n  app: {id: &quot;234324&quot;}\n\n  actor: {id: &quot;3433434&quot;, description: ...</pre>\n"],["read","App","App.html#method-c-read","(params)","<p>OUTPUT =&gt;{\n\n<pre>    account: {id: &quot;445654654645&quot;},\n\n    app: {\n           id: &quot;4545554654645&quot;, \n       ...</pre>\n"],["read","AppsController","AppsController.html#method-i-read","()","<p>OUTPUT =&gt;{\n\n<pre>    account: {id: &quot;445654654645&quot;},\n\n    app: {\n           id: &quot;4545554654645&quot;, \n       ...</pre>\n"],["read","Rule","Rule.html#method-c-read","(params)","<p>OUTPUT =&gt; {\n\n<pre class=\"ruby\">  :<span class=\"ruby-keyword\">return</span> =<span class=\"ruby-operator\">&gt;</span> [ \n               {<span class=\"ruby-string\">&quot;name&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;fancy rule 1&quot;</span>, <span class=\"ruby-string\">&quot;event&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;sign_up&quot;</span>, <span class=\"ruby-string\">&quot;owner&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;client&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n"],["read","RulesController","RulesController.html#method-i-read","()","<p>OUTPUT =&gt; rules: [\n\n<pre class=\"ruby\">   {<span class=\"ruby-string\">&quot;name&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;fancy rule 1&quot;</span>, <span class=\"ruby-string\">&quot;event&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;sign_up&quot;</span>, <span class=\"ruby-string\">&quot;owner&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;client&quot;</span>, <span class=\"ruby-string\">&quot;action&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;topbar&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n"],["refresh_token","AccessInfo","AccessInfo.html#method-i-refresh_token","()",""],["remap_to","Actor","Actor.html#method-i-remap_to","(actor_id)","<p>OUTPUT\n\n<pre>self or nil</pre>\n"],["remove_user_from_mailchimp","Account","Account.html#method-i-remove_user_from_mailchimp","()","<p>Mailchimp integration, remove from subscribed list ASA email id is removed\n"],["serialize_to","Utility::FormatHash","Utility/FormatHash.html#method-c-serialize_to","(params)","<p>OUTPUT =&gt; {“property[address][long]”=&gt;Float,\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;property[customer][address][geo][lat]&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-constant\">Float</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n"],["set","Actor","Actor.html#method-c-set","(params)","<p>OUTPUT =&gt; {:return =&gt; object, :error =&gt; nil}\n"],["set","ActorsController","ActorsController.html#method-i-set","()","<p>OUTPUT =&gt; {\n\n<pre class=\"ruby\">   <span class=\"ruby-string\">&quot;id&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;50742b0063fe85d42a000005&quot;</span>,\n   <span class=\"ruby-string\">&quot;account_id&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;50742aff63fe85d42a000001&quot;</span>, \n   <span class=\"ruby-string\">&quot;app_id&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;50742b0063fe85d42a000003&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n"],["show","Accounts::ConfirmationsController","Accounts/ConfirmationsController.html#method-i-show","()","<p>GET /resource/confirmation?confirmation_token=abcdef\n"],["social_crm","SocialController","SocialController.html#method-i-social_crm","()","<p>API for checking  social CRM module (simple page for input/output)\n"],["str_equality","Object","Object.html#method-i-str_equality","(event, condition)",""],["str_regex","Object","Object.html#method-i-str_regex","(event, condition)",""],["to_something","GetType","GetType.html#method-c-to_something","(val)",""],["type_map","GetType","GetType.html#method-c-type_map","(type)",""],["unique_token","GenerateToken","GenerateToken.html#method-c-unique_token","()",""],["update","Accounts::ConfirmationsController","Accounts/ConfirmationsController.html#method-i-update","()","<p>PUT /resource/confirmation\n"],["update","App","App.html#method-c-update","(params)","<p>OUTPUT =&gt; {:return =&gt; object, :error =&gt; nil}\n"],["update","AppsController","AppsController.html#method-i-update","()","<p>OUTPUT =&gt; {\n\n<pre class=\"ruby\">                             <span class=\"ruby-string\">&quot;id&quot;</span>=<span class=\"ruby-operator\">&gt;</span><span class=\"ruby-string\">&quot;5074143063fe853420000005&quot;</span>, \n\n                      <span class=\"ruby-operator\">...</span>\n</pre>\n"],["update","Rule","Rule.html#method-c-update","(params)","<p>OUTPUT =&gt; {\n\n<pre class=\"ruby\">  :<span class=\"ruby-keyword\">return</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-keyword\">true</span>, :<span class=\"ruby-identifier\">error</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-keyword\">nil</span>\n}\n</pre>\n"],["update","RulesController","RulesController.html#method-i-update","()","<p>OUTPUT =&gt; {\n\n<pre>  status: true or false\n}</pre>\n"],["update_schema","App","App.html#method-i-update_schema","(params)","<p>OUTPUT =&gt; {:return =&gt; true, :error =&gt; nil}\n"],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}