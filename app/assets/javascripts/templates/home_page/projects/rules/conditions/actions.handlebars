  <div class="action_box"><!-- Template config main box starts --> 
    <div class="event_selector">
      <h3> Set the action </h3>
      <select class="select2Props action_sel" style='width:400px;margin:auto;'>

        {{#each template in view.rules.templateLib}}    
          {{#ifequal view.rules.selected.action template.id}}
            <option  value="{{getvalue template.id}}" selected >{{template.displayName}}</option>
          {{else}}
            <option value="{{getvalue template.id}}" >{{template.displayName}}</option>
          {{/ifequal}}
        {{/each}}
      </select>
    </div>

    <h3>Template Configuration</h3>
    <div class="preview" >
      <div class='btn btn-large btn-inverse' {{action "showTemplatePreview" view.rules.selected target="App.conditionsView"}}> 
        Preview
      </div>
    </div>

    <div {{bindAttr class="view.showTemplateDecker"}}>  


      <div class='template_config_box'>
      
      {{#each template_config in view.rules.selected.action_param}}
          
        <!--TODO: This is inefficient to not have if else but its ok, will fix later -->
        {{#isNumeric template_config.key}}
          <div class="entry">
            <div class="key">
              {{getTemplatePlaceHolder template_config.key}}
            </div>
            <div class="value">
              {{view App.RequiredAFTextField valueBinding="template_config.value" class="in" }}
            </div>
          </div>
        {{/isNumeric}}

        {{#isFont template_config.key}}
          <div class="entry">
            <div class="key">
              {{getTemplatePlaceHolder template_config.key}}
            </div>
            <div class="value">
              {{view Ember.Select
                contentBinding="App.templatesFixedData.font"
                selectionBinding="template_config.value"
                class='select2Props in'}}
            </div>
          </div>
        {{/isFont}}

        {{#isColor template_config.key}}
          <div class="entry">
            <div class="key">
              {{getTemplatePlaceHolder template_config.key}}
            </div>
            <div class="value">
              {{view App.RequiredAFTextField valueBinding="template_config.value" class="colorpickerProps in"}}          
            </div>
          </div>
        {{/isColor}}
        
        {{#isAlign template_config.key}}
          <div class="entry">
            <div class="key">
              {{getTemplatePlaceHolder template_config.key}}
            </div>
            <div class="value">              
              {{view Ember.Select
                    contentBinding="App.templatesFixedData.align"
                    selectionBinding="template_config.value"
                    class='select2Props in'}}
            </div>
          </div>        
        {{/isAlign}}

        {{#isString  template_config.key}}
          <div class="entry">
            <div class="key">
              {{getTemplatePlaceHolder template_config.key}}
            </div>
            <div class="value">
              {{view App.RequiredAFTextField valueBinding="template_config.value" class="in"}}
            </div>
          </div>        
        {{/isString}}    

        {{#isUrl template_config.key}}
          <div class="entry">
            <div class="key">
              {{getTemplatePlaceHolder template_config.key}}
            </div>
            <div class="value">
              {{view App.RequiredAFTextField valueBinding="template_config.value" class="in"}}
            </div>
          </div>        
        {{/isUrl}}  
      {{/each}}



      </div> <!-- Template vars config list ends -->
    </div> <!-- Decker ends -->
    <div class="decker_boundary">  
      <div {{bindAttr class="view.showDeckerControl"}} {{action "manageDeckerMinimize" target="App.conditionsView"}}> </div>
    </div>
  </div> <!-- Template config main box ends -->